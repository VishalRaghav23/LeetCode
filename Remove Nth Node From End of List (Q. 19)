   Q. Given the head of a linked list, remove the nth node from the end of the list and return its head.
      Eg. Input: head = [1,2,3,4,5], n = 2
          Output: [1,2,3,5]

   
   public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head;
        int count = 1, prev = 0;
        
        if(head.next == null)
            return null;
        // cal the size of list
        
        while(curr.next != null){
            curr = curr.next;
            count++;
        }
        
        // if n == count remove the first node
        if(count == n){
            head = head.next;
            return head;
        }
        
        // count the prev node and make remove the next node
        prev = count - n -1;
        curr = head;
        for(int i = 0; i < prev; i++){
            curr = curr.next;
        }
        curr.next = curr.next.next;
        return head;  
    }
